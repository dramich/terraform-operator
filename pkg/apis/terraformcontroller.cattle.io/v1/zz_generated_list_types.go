// Code generated by main. DO NOT EDIT.

// +k8s:deepcopy-gen=package
// +groupName=terraformcontroller.cattle.io
package v1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ModuleList is a list of Module resources
type ModuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []Module `json:"items"`
}

func NewModule(namespace, name string, obj Module) *Module {
	obj.APIVersion, obj.Kind = SchemeGroupVersion.WithKind("Module").ToAPIVersionAndKind()
	obj.Name = name
	obj.Namespace = namespace
	return &obj
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ExecutionList is a list of Execution resources
type ExecutionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []Execution `json:"items"`
}

func NewExecution(namespace, name string, obj Execution) *Execution {
	obj.APIVersion, obj.Kind = SchemeGroupVersion.WithKind("Execution").ToAPIVersionAndKind()
	obj.Name = name
	obj.Namespace = namespace
	return &obj
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ExecutionRunList is a list of ExecutionRun resources
type ExecutionRunList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []ExecutionRun `json:"items"`
}

func NewExecutionRun(namespace, name string, obj ExecutionRun) *ExecutionRun {
	obj.APIVersion, obj.Kind = SchemeGroupVersion.WithKind("ExecutionRun").ToAPIVersionAndKind()
	obj.Name = name
	obj.Namespace = namespace
	return &obj
}
